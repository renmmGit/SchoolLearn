<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="3" passed="0" failed="1" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-03-15T07:27:57Z" name="Suite" finished-at="2018-03-15T07:29:41Z" duration-ms="104164">
    <groups>
      <group name="login">
        <method signature="Bedlight.a()[pri:0, instance:com.test.testcase.Bedlight@6c284af]" name="a" class="com.test.testcase.Bedlight"/>
        <method signature="Bedlight.b()[pri:0, instance:com.test.testcase.Bedlight@6c284af]" name="b" class="com.test.testcase.Bedlight"/>
      </group> <!-- login -->
      <group name="login1">
        <method signature="Bedlight.c()[pri:0, instance:com.test.testcase.Bedlight@6c284af]" name="c" class="com.test.testcase.Bedlight"/>
      </group> <!-- login1 -->
    </groups>
    <test started-at="2018-03-15T07:27:57Z" name="Test1" finished-at="2018-03-15T07:29:41Z" duration-ms="104164">
      <class name="com.test.testcase.Bedlight">
        <test-method is-config="true" signature="springTestContextBeforeTestClass()[pri:0, instance:com.test.testcase.Bedlight@6c284af]" started-at="2018-03-15T00:27:57Z" name="springTestContextBeforeTestClass" finished-at="2018-03-15T00:27:57Z" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method is-config="true" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.test.testcase.Bedlight@6c284af]" started-at="2018-03-15T00:27:57Z" name="springTestContextPrepareTestInstance" finished-at="2018-03-15T00:27:57Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" duration-ms="266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.test.testcase.Bedlight@6c284af]" started-at="2018-03-15T00:27:57Z" name="beforeClass" finished-at="2018-03-15T00:29:04Z" duration-ms="67132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.test.testcase.Bedlight@6c284af]" started-at="2018-03-15T00:29:04Z" name="springTestContextBeforeTestMethod" finished-at="2018-03-15T00:29:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.testcase.Bedlight.a()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="a()[pri:0, instance:com.test.testcase.Bedlight@6c284af]" started-at="2018-03-15T00:29:04Z" name="a" finished-at="2018-03-15T00:29:38Z" duration-ms="33309" status="FAIL">
          <exception class="org.openqa.selenium.InvalidSelectorException">
            <message>
              <![CDATA[Locator Strategy 'name' is not supported for this session (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 6 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/invalid_selector_exception.html
Build info: version: '2.44.0', revision: '76d78cf', time: '2014-10-23 20:03:00'
System info: host: 'philipss-MacBook-Pro.local', ip: '192.168.1.137', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.3', java.version: '9.0.4'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities [{appPackage=com.xiaomi.smarthome, deviceScreenSize=1080x1920, networkConnectionEnabled=true, noReset=true, noSign=true, warnings={}, databaseEnabled=false, deviceName=3DN4C16419025167, platform=WINDOWS, deviceUDID=3DN4C16419025167, appActivity=.SmartHomeMainActivity, desired={appPackage=com.xiaomi.smarthome, appActivity=.SmartHomeMainActivity, noReset=true, noSign=true, newCommandTimeout=600, platformVersion=8.0.0, automationName=Appium, unicodeKeyboard=true, platformName=Android, udid=3DN4C16419025167, deviceName=android Emulator, platform=WINDOWS}, newCommandTimeout=600, platformVersion=6.0, webStorageEnabled=false, locationContextEnabled=false, automationName=Appium, takesScreenshot=true, javascriptEnabled=true, deviceModel=HUAWEI VNS-AL00, unicodeKeyboard=true, platformName=Android, udid=3DN4C16419025167, deviceManufacturer=HUAWEI}]
Session ID: fa38a011-d952-4de7-9f71-e693b495a710]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidSelectorException: Locator Strategy 'name' is not supported for this session (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 6 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/invalid_selector_exception.html
Build info: version: '2.44.0', revision: '76d78cf', time: '2014-10-23 20:03:00'
System info: host: 'philipss-MacBook-Pro.local', ip: '192.168.1.137', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.3', java.version: '9.0.4'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities [{appPackage=com.xiaomi.smarthome, deviceScreenSize=1080x1920, networkConnectionEnabled=true, noReset=true, noSign=true, warnings={}, databaseEnabled=false, deviceName=3DN4C16419025167, platform=WINDOWS, deviceUDID=3DN4C16419025167, appActivity=.SmartHomeMainActivity, desired={appPackage=com.xiaomi.smarthome, appActivity=.SmartHomeMainActivity, noReset=true, noSign=true, newCommandTimeout=600, platformVersion=8.0.0, automationName=Appium, unicodeKeyboard=true, platformName=Android, udid=3DN4C16419025167, deviceName=android Emulator, platform=WINDOWS}, newCommandTimeout=600, platformVersion=6.0, webStorageEnabled=false, locationContextEnabled=false, automationName=Appium, takesScreenshot=true, javascriptEnabled=true, deviceModel=HUAWEI VNS-AL00, unicodeKeyboard=true, platformName=Android, udid=3DN4C16419025167, deviceManufacturer=HUAWEI}]
Session ID: fa38a011-d952-4de7-9f71-e693b495a710
	at jdk.internal.reflect.GeneratedConstructorAccessor12.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:488)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:180)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByName(RemoteWebDriver.java:425)
	at org.openqa.selenium.By$ByName.findElement(By.java:299)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
	at com.dan.common.Element.find(Element.java:136)
	at com.dan.common.Element.get(Element.java:74)
	at com.dan.common.Element.click(Element.java:469)
	at com.test.testcase.Bedlight.a(Bedlight.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:157)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidSelectorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.test.testcase.Bedlight@6c284af]" started-at="2018-03-15T00:29:39Z" name="afterMethod" finished-at="2018-03-15T00:29:39Z" duration-ms="0" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[An element could not be located on the page using the given search parameters. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 700 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.44.0', revision: '76d78cf', time: '2014-10-23 20:03:00'
System info: host: 'philipss-MacBook-Pro.local', ip: '192.168.1.137', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.3', java.version: '9.0.4'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities [{appPackage=com.xiaomi.smarthome, deviceScreenSize=1080x1920, networkConnectionEnabled=true, noReset=true, noSign=true, warnings={}, databaseEnabled=false, deviceName=3DN4C16419025167, platform=WINDOWS, deviceUDID=3DN4C16419025167, appActivity=.SmartHomeMainActivity, desired={appPackage=com.xiaomi.smarthome, appActivity=.SmartHomeMainActivity, noReset=true, noSign=true, newCommandTimeout=600, platformVersion=8.0.0, automationName=Appium, unicodeKeyboard=true, platformName=Android, udid=3DN4C16419025167, deviceName=android Emulator, platform=WINDOWS}, newCommandTimeout=600, platformVersion=6.0, webStorageEnabled=false, locationContextEnabled=false, automationName=Appium, takesScreenshot=true, javascriptEnabled=true, deviceModel=HUAWEI VNS-AL00, unicodeKeyboard=true, platformName=Android, udid=3DN4C16419025167, deviceManufacturer=HUAWEI}]
Session ID: fa38a011-d952-4de7-9f71-e693b495a710]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 700 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.44.0', revision: '76d78cf', time: '2014-10-23 20:03:00'
System info: host: 'philipss-MacBook-Pro.local', ip: '192.168.1.137', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.3', java.version: '9.0.4'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities [{appPackage=com.xiaomi.smarthome, deviceScreenSize=1080x1920, networkConnectionEnabled=true, noReset=true, noSign=true, warnings={}, databaseEnabled=false, deviceName=3DN4C16419025167, platform=WINDOWS, deviceUDID=3DN4C16419025167, appActivity=.SmartHomeMainActivity, desired={appPackage=com.xiaomi.smarthome, appActivity=.SmartHomeMainActivity, noReset=true, noSign=true, newCommandTimeout=600, platformVersion=8.0.0, automationName=Appium, unicodeKeyboard=true, platformName=Android, udid=3DN4C16419025167, deviceName=android Emulator, platform=WINDOWS}, newCommandTimeout=600, platformVersion=6.0, webStorageEnabled=false, locationContextEnabled=false, automationName=Appium, takesScreenshot=true, javascriptEnabled=true, deviceModel=HUAWEI VNS-AL00, unicodeKeyboard=true, platformName=Android, udid=3DN4C16419025167, deviceManufacturer=HUAWEI}]
Session ID: fa38a011-d952-4de7-9f71-e693b495a710
	at jdk.internal.reflect.GeneratedConstructorAccessor14.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:488)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:180)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:393)
	at org.openqa.selenium.By$ById.findElement(By.java:214)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
	at com.dan.common.Element.find(Element.java:136)
	at com.dan.common.Element.get(Element.java:74)
	at com.dan.common.Element.click(Element.java:469)
	at com.dan.demo.BaseCase.goToMain(BaseCase.java:71)
	at com.test.testcase.BaseCaseTest.afterMethod(BaseCaseTest.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:786)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.test.testcase.Bedlight@6c284af]" started-at="2018-03-15T00:29:41Z" name="springTestContextAfterTestMethod" finished-at="2018-03-15T00:29:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.testcase.Bedlight.a()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.test.testcase.Bedlight@6c284af]" started-at="2018-03-15T00:29:41Z" name="springTestContextBeforeTestMethod" finished-at="2018-03-15T00:29:41Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="b()[pri:0, instance:com.test.testcase.Bedlight@6c284af]" started-at="2018-03-15T00:29:41Z" name="b" finished-at="2018-03-15T00:29:41Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.test.testcase.Bedlight@6c284af]" started-at="2018-03-15T00:29:41Z" name="afterMethod" finished-at="2018-03-15T00:29:41Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.test.testcase.Bedlight@6c284af]" started-at="2018-03-15T00:29:41Z" name="springTestContextAfterTestMethod" finished-at="2018-03-15T00:29:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.testcase.Bedlight.b()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.test.testcase.Bedlight@6c284af]" started-at="2018-03-15T00:29:41Z" name="springTestContextBeforeTestMethod" finished-at="2018-03-15T00:29:41Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method signature="c()[pri:0, instance:com.test.testcase.Bedlight@6c284af]" started-at="2018-03-15T00:29:41Z" name="c" finished-at="2018-03-15T00:29:41Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.test.testcase.Bedlight@6c284af]" started-at="2018-03-15T00:29:41Z" name="afterMethod" finished-at="2018-03-15T00:29:41Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.test.testcase.Bedlight@6c284af]" started-at="2018-03-15T00:29:41Z" name="springTestContextAfterTestMethod" finished-at="2018-03-15T00:29:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.testcase.Bedlight.c()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.test.testcase.Bedlight@6c284af]" started-at="2018-03-15T00:29:41Z" name="afterClass" finished-at="2018-03-15T00:29:41Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="springTestContextAfterTestClass()[pri:0, instance:com.test.testcase.Bedlight@6c284af]" started-at="2018-03-15T00:29:41Z" name="springTestContextAfterTestClass" finished-at="2018-03-15T00:29:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.test.testcase.Bedlight -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
